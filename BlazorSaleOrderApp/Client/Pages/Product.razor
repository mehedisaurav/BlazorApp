@page "/product"
@using BlazorSaleOrderApp.Shared
@using BlazorSaleOrderApp.Shared.Dto.ProductDto
@inject HttpClient Http





<h2>Product</h2>
<div>
    @if (Products.Count > 0)
    {


        <table id="example" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Products)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Quantity</td>
                        <td>@item.Price</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => Edit(item.Id)">Edit</button>
                            <button class="btn btn-primary" @onclick="Delete">Delete</button>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@if (isModalShow)
{
    <div class="modal fade show" id="myModal"
     style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"></h4>
                    <button type="button" class="close" @onclick="Delete">&times;</button>
                </div>
                <div class="modal-body">
                    <div>
                        <label>Name</label>
                        <input type="text" @bind="model.Name">
                    </div>
                    <div>
                        <label>Price</label>
                        <input type="text" @bind="model.Price">
                    </div>
                    <div>
                        <label>Quantity</label>
                        <input type="text" @bind="model.Quantity">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="Delete">OK</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    List<ProductDto> Products = new List<ProductDto>();
    ProductDto model;
    bool isModalShow = false;
    protected override async Task OnInitializedAsync()
    {
        Products = await Http.GetFromJsonAsync<List<ProductDto>>("api/Product");
    }

    private async Task Edit(int id)
    {
        var response = await Http.GetAsync("api/Product/" + id);
        if (response.IsSuccessStatusCode)
        {
            model = await response.Content.ReadFromJsonAsync<ProductDto>();
            isModalShow = true;
        }
    }
    private void Delete()
    {
        isModalShow = false;
    }
}
